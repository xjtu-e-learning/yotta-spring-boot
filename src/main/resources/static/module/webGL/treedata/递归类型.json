{"totalbranchlevel":2,"branchnum":2,"term_id":78,"name":"递归类型","children":[{"totalbranchlevel":0,"facet_name":"摘要","totalbranchnum":0,"type":"branch","totalleafnum":3,"children":[{"url":"https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92%E7%B1%BB%E5%9E%8B","content":"本条目已列出参考文献，但因为没有文内引注而使来源仍然不明。（2014年8月18日） 请通过加入合适的行内引用来改善这篇条目。","fragment_id":"摘要_1","scratchTime":"2016-12-20 09:50:33.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92%E7%B1%BB%E5%9E%8B","content":"本条目需要补充更多来源。（2014年8月18日） 请协助添加多方面可靠来源以改善这篇条目，无法查证的内容可能会因为异议提出而移除。","fragment_id":"摘要_2","scratchTime":"2016-12-20 09:50:33.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92%E7%B1%BB%E5%9E%8B","content":"在计算机编程语言中，递归类型（又名：递归定义、隐含类型或隐含定义）是一种特殊的数据类型，它表示自身内部可能包含其它的同样类型的值。","fragment_id":"摘要_3","scratchTime":"2016-12-20 09:50:33.0","type":"leaf","flag":"text"}]},{"totalbranchlevel":0,"facet_name":"示例","totalbranchnum":0,"type":"branch","totalleafnum":8,"children":[{"url":"https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92%E7%B1%BB%E5%9E%8B","content":"以下是一个在Haskell中使用链表类型的一个列子：","fragment_id":"示例_1","scratchTime":"2016-12-20 09:50:33.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92%E7%B1%BB%E5%9E%8B","content":"data List a = Nil | Cons a (List a)","fragment_id":"示例_2","scratchTime":"2016-12-20 09:50:33.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92%E7%B1%BB%E5%9E%8B","content":"这表示a的链表s可以是一个空表或一个cons单元包含了一个'a'（链表的“头”）和另一个链表（“尾”）。","fragment_id":"示例_3","scratchTime":"2016-12-20 09:50:33.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92%E7%B1%BB%E5%9E%8B","content":"递归不允许在Miranda语言中和Haskell的同义类型中出现，所以以下的Haskell类型是非法的：","fragment_id":"示例_4","scratchTime":"2016-12-20 09:50:33.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92%E7%B1%BB%E5%9E%8B","content":"type Bad = (Int, Bad)\ntype Evil = Bool -> Evil","fragment_id":"示例_5","scratchTime":"2016-12-20 09:50:33.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92%E7%B1%BB%E5%9E%8B","content":"相反地，表面上是相等的代数数据类型却是可以的：","fragment_id":"示例_6","scratchTime":"2016-12-20 09:50:33.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92%E7%B1%BB%E5%9E%8B","content":"data Good = Pair Int Good\ndata Fine = Fun (Bool->Fine)","fragment_id":"示例_7","scratchTime":"2016-12-20 09:50:33.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92%E7%B1%BB%E5%9E%8B","content":"本条目部分或全部内容出自以GFDL授权发布的《自由在线电脑词典》（FOLDOC）。","fragment_id":"示例_8","scratchTime":"2016-12-20 09:50:33.0","type":"leaf","flag":"text"}]}]}
