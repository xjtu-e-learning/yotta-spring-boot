{"totalbranchlevel":2,"branchnum":2,"term_id":13,"name":"可变长数组","children":[{"totalbranchlevel":0,"facet_name":"摘要","totalbranchnum":0,"type":"branch","totalleafnum":3,"children":[{"url":"https://zh.wikipedia.org/wiki/%E5%8F%AF%E5%8F%98%E9%95%BF%E6%95%B0%E7%BB%84","content":"可变长数组是计算机程序设计中，数组对象的长度在运行时（而不是编译时）确定。[1]","fragment_id":"摘要_1","scratchTime":"2016-12-20 09:39:17.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E5%8F%AF%E5%8F%98%E9%95%BF%E6%95%B0%E7%BB%84","content":"支持可变长数组的程序设计语言有：Ada, Algol 68 (for non-flexible rows), APL, C99 (以及C11[2][3][4] ) ，C# [5], COBOL, Fortran 90, J。","fragment_id":"摘要_2","scratchTime":"2016-12-20 09:39:17.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E5%8F%AF%E5%8F%98%E9%95%BF%E6%95%B0%E7%BB%84","content":"C/C++的柔性数组成员是另外一个语言特性。","fragment_id":"摘要_3","scratchTime":"2016-12-20 09:39:17.0","type":"leaf","flag":"text"}]},{"totalbranchlevel":0,"facet_name":"例子","totalbranchnum":0,"type":"branch","totalleafnum":7,"children":[{"url":"https://zh.wikipedia.org/wiki/%E5%8F%AF%E5%8F%98%E9%95%BF%E6%95%B0%E7%BB%84","content":"下述C99函数内部的局部变量为可变长数组。","fragment_id":"例子_1","scratchTime":"2016-12-20 09:39:17.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E5%8F%AF%E5%8F%98%E9%95%BF%E6%95%B0%E7%BB%84","content":"float read_and_process(int n)\n{\n    float vals[n];\n\n    for (int i = 0; i < n; i++)\n        vals[i] = read_val();\n    return process(vals, n);\n}","fragment_id":"例子_2","scratchTime":"2016-12-20 09:39:17.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E5%8F%AF%E5%8F%98%E9%95%BF%E6%95%B0%E7%BB%84","content":"type Vals_Type is array (Positive range <>) of Float;\n\nfunction Read_And_Process (N : Integer) return Float is\n   Vals : Vals_Type (1 .. N);\nbegin\n   for I in 1 .. N loop\n      Vals (I) := Read_Val;\n   end loop;\n   return Process (Vals);\nend Read_And_Process;","fragment_id":"例子_3","scratchTime":"2016-12-20 09:39:17.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E5%8F%AF%E5%8F%98%E9%95%BF%E6%95%B0%E7%BB%84","content":"function read_and_process(n) result(o)\n    integer,intent(in)::n\n    real::o\n\n    real,dimension(n)::vals\n    real::read_val, process\n    integer::i\n \n    do i = 1,n\n       vals(i) = read_val()\n    end do\n    o = process(vals, n)\nend function read_and_process","fragment_id":"例子_4","scratchTime":"2016-12-20 09:39:17.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E5%8F%AF%E5%8F%98%E9%95%BF%E6%95%B0%E7%BB%84","content":"DATA DIVISION.\nWORKING-STORAGE SECTION.\n01  DEPT-PEOPLE.\n    05  PEOPLE-CNT          PIC S9(4) BINARY.\n    05  DEPT-PERSON         OCCURS 0 TO 20 TIMES DEPENDING ON PEOPLE-CNT.\n        10  PERSON-NAME     PIC X(20).\n        10  PERSON-WAGE     PIC S9(7)V99 PACKED-DECIMAL.","fragment_id":"例子_5","scratchTime":"2016-12-20 09:39:17.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E5%8F%AF%E5%8F%98%E9%95%BF%E6%95%B0%E7%BB%84","content":"unsafe void declareStackBasedArray(int size)\n{\n    int *pArray = stackalloc int[size];\n    pArray[0] = 123;\n}","fragment_id":"例子_6","scratchTime":"2016-12-20 09:39:17.0","type":"leaf","flag":"text"},{"url":"https://zh.wikipedia.org/wiki/%E5%8F%AF%E5%8F%98%E9%95%BF%E6%95%B0%E7%BB%84","content":"^ http://docs.cray.com/books/004-2179-001/html-004-2179-001/z893434830malz.html ^ http://pic.dhe.ibm.com/infocenter/ratdevz/v8r0/topic/com.ibm.xlcpp111.aix.doc/language_ref/variable_length_arrays.html ^ http://gcc.gnu.org/onlinedocs/gcc/Variable-Length.html ^ ISO 9899:2011 Programming Languages - C 6.7.6.2 4 ^ 作为unsafe-mode stack-allocated arrays","fragment_id":"例子_7","scratchTime":"2016-12-20 09:39:17.0","type":"leaf","flag":"text"}]}]}
